{
    "global_settings": {
        "logging": {
            "level": "{{__settings__.logging.loglevel}}"
        }
    }, 
    "requests": [
        {
            "post_process": {
                "pipeline": [
                    {
                        "input": [
                            "{{__response__.body}}", 
                            "$.$.result[*]"
                        ], 
                        "output": "__stdout__", 
                        "method": "json_path"
                    }, 
                    {
                        "input": [
                            "{{__stdout__}}", 
                            "", 
                            "{{index}}", 
                            "{{host}}", 
                            "{{source}}", 
                            "{{sourcetype}}"
                        ], 
                        "output": "__stdout__", 
                        "method": "splunk_xml"
                    }, 
                    {
                        "input": [
                            "{{__stdout__}}"
                        ], 
                        "method": "std_output"
                    }
                ], 
                "skip_conditions": [
                    {
                        "input": [
                            "{{__response__.body}}", 
                            "$.$.result[*]"
                        ], 
                        "method": "json_empty"
                    }
                ]
            }, 
            "iteration_mode": {
                "stop_conditions": [
                    {
                        "input": [
                            "{{__response__.body}}", 
                            "$.$.result[*]"
                        ], 
                        "method": "json_empty"
                    }
                ], 
                "iteration_count": "1"
            }, 
            "request": {
                "headers": {}, 
                "auth": {
                    "options": {
                        "password": "{{global_account.password}}", 
                        "username": "{{global_account.username}}"
                    }, 
                    "type": "basic_auth"
                }, 
                "method": "GET", 
                "url": "{{__settings__.additional_parameters.bigfix_server_url}}:{{__settings__.additional_parameters.bigfix_server_port}}/api/query?output=json&relevance=(\"fixlet_id=\" %26 item 0 of it, \"fixlet_name=\" %26 item 1 of it, \"fixlet_severity=\" %26 item 2 of it, \"fixlet_source=\" %26 item 7 of it, \"site=\" %26 item 3 of it, \"source_category=\" %26 item 4 of it, \"source_release_date=\" %26 item 5 of it, \"source_id=\" %26 item 6 of it) of (item 0 of it as string, item 1 of it as string, item 2 of it as string, item 3 of it as string, item 4 of it as string, item 5 of it as string, item 6 of it as string, item 7 of it) of (id of it, name of it, (if exists source severity of it then source severity of it else \"N%2FA\"), name of site of it, (if exists category of it then category of it else \"N%2FA\"), (if exists source release date of it then source release date of it as string else \"N%2FA\"), (if exists source id of it then source id of it as string else \"N%2FA\"), (if exists source of it then source of it else \"N%2FA\")) of fixlets whose (type of it as string is \"Fixlet\") of all bes sites"
            }, 
            "pre_process": {
                "pipeline": [], 
                "skip_conditions": []
            }
        }
    ], 
    "tokens": [
        "__settings__.logging.loglevel", 
        "__settings__.additional_parameters.bigfix_server_port", 
        "__settings__.additional_parameters.bigfix_server_url", 
        "global_account.username", 
        "global_account.password"
    ], 
    "meta": {
        "apiVersion": "1.0.0"
    }
}